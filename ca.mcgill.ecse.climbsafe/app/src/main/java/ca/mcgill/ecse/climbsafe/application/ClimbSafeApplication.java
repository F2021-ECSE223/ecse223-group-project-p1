/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ca.mcgill.ecse.climbsafe.application;

import java.awt.EventQueue;

import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
<<<<<<< Updated upstream
import javax.swing.plaf.ComponentUI;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;

import ca.mcgill.ecse.climbsafe.model.ClimbSafe;
import ca.mcgill.ecse.climbsafe.persistence.ClimbSafePersistence;
=======

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import ca.mcgill.ecse.climbsafe.model.ClimbSafe;
import ca.mcgill.ecse.climbsafe.persistence.ClimbSafePersistence;
import ca.mcgill.ecse.climbsafe.view.ClimbSafeMainPage;
>>>>>>> Stashed changes
import ca.mcgill.ecse.climbsafe.view.ClimbSafePage;

public class ClimbSafeApplication {
	
	
public static final boolean DARK_MODE = true;
private static ClimbSafe climbSafe;

<<<<<<< Updated upstream

  public static void main(String[] args) {
	  
	  try {
	      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
	      
	    } catch (UnsupportedLookAndFeelException e) {
	    	
	    } catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    
    EventQueue.invokeLater(ClimbSafePage::new);
  }
=======
  public String getGreeting() {
    return "Hello World!"; 
  }

  public static void main(String[] args) {
	    // start UI with dark mode, otherwise default mode
	   /* try {
	      UIManager.setLookAndFeel(DARK_MODE ? new FlatDarkLaf() : new FlatLightLaf());
	    } catch (UnsupportedLookAndFeelException e) {
	      // Use regular Swing theme if FlatLaf is unavailable
	    }*/
	    EventQueue.invokeLater(ClimbSafeMainPage::new);
	  }
>>>>>>> Stashed changes

  public static ClimbSafe getClimbSafe() {
    ClimbSafePersistence.setFilename("ClimbSafeDemo.data");
    if (climbSafe == null) {
<<<<<<< Updated upstream
   // these attributes are default, you should set them later with the setters
=======
      // these attributes are default, you should set them later with the setters
>>>>>>> Stashed changes
      climbSafe = ClimbSafePersistence.load();
    }
    
    return climbSafe;
  }
}
